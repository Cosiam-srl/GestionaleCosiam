// <auto-generated />
using System;
using CosiamAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CosiamAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210913132539_aggiuntoInstrenghtMezzo")]
    partial class aggiuntoInstrenghtMezzo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CosiamAPI.Models.AttachmentsNota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFile")
                        .HasColumnType("int");

                    b.Property<int>("IdNota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFile");

                    b.HasIndex("IdNota");

                    b.ToTable("AttachmentsNota");
                });

            modelBuilder.Entity("CosiamAPI.Models.AttachmentsSaltura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFile")
                        .HasColumnType("int");

                    b.Property<int>("IdSaltura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFile");

                    b.HasIndex("IdSaltura");

                    b.ToTable("AttachmentsSaltura");
                });

            modelBuilder.Entity("CosiamAPI.Models.AttrezzaturaAT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Builder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compatibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("EstimatedValue")
                        .HasColumnType("float");

                    b.Property<string>("Idoneity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalSpecs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttrezzaturaAT");
                });

            modelBuilder.Entity("CosiamAPI.Models.Cantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedEnding")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContratto")
                        .HasColumnType("int");

                    b.Property<int?>("IdLogo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("budget")
                        .HasColumnType("float");

                    b.Property<string>("cse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdContratto");

                    b.HasIndex("IdLogo");

                    b.ToTable("Cantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.Clienti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PIVA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("CosiamAPI.Models.Contratto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPrezziarioCliente")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfCompletition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("extraWorkAmount")
                        .HasColumnType("int");

                    b.Property<int?>("idPm")
                        .HasColumnType("int");

                    b.Property<string>("longDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("netContractualAmount")
                        .HasColumnType("int");

                    b.Property<string>("oda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPrezziarioCliente");

                    b.HasIndex("idPm");

                    b.ToTable("Contratto");
                });

            modelBuilder.Entity("CosiamAPI.Models.DPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaintenanceExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Usable")
                        .HasColumnType("bit");

                    b.Property<double?>("cost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DPI");
                });

            modelBuilder.Entity("CosiamAPI.Models.DocumentsList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdFile")
                        .HasColumnType("int");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdFile");

                    b.HasIndex("IdReport");

                    b.ToTable("DocumentsList");
                });

            modelBuilder.Entity("CosiamAPI.Models.Fornitori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PIVA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornitori");
                });

            modelBuilder.Entity("CosiamAPI.Models.InventarioGenerale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("InventoryValue")
                        .HasColumnType("real");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InventarioGenerale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListOfGoodsAndServicesInUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ServizioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReport");

                    b.HasIndex("ServizioId");

                    b.ToTable("ListOfGoodsAndServicesInUse");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListOfServicesSoldToClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ServizioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReport");

                    b.HasIndex("ServizioId");

                    b.ToTable("ListOfServicesSoldToClient");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaCapiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdPersonale");

                    b.ToTable("ListaCapiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaFileDiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdFile")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdFile");

                    b.ToTable("ListaFileDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaFornitoriCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdFornitore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdFornitore");

                    b.ToTable("ListaFornitoriCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaMezziDiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdMezzi")
                        .HasColumnType("int");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdMezzi");

                    b.ToTable("ListaMezziDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaNoteDiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdNote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdNote");

                    b.ToTable("ListaNoteDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaPersonaleAssegnatoDiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonale")
                        .HasColumnType("int");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdPersonale");

                    b.ToTable("ListaPersonaleAssegnatoDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaProjectManagerCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.HasIndex("IdPersonale");

                    b.ToTable("ListaProjectManagerCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.Mezzi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ContoProprioContoTerzi")
                        .HasColumnType("bit");

                    b.Property<double>("DailyCost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ExtimatedValue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FurtoIncendio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ISPSEL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsuranceExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastKMCheck")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LicenseCProprio")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MatriculationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OriginalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RevisionExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StampDutyExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tachograph")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TwentyYearVerificationOfLiftingOrgans")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WearBook")
                        .HasColumnType("datetime2");

                    b.Property<string>("inStrenght")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mezzi");
                });

            modelBuilder.Entity("CosiamAPI.Models.MezziNota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMezzo")
                        .HasColumnType("int");

                    b.Property<int>("IdNote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMezzo");

                    b.HasIndex("IdNote");

                    b.ToTable("MezziNota");
                });

            modelBuilder.Entity("CosiamAPI.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("CosiamAPI.Models.Personale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CF")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ConsegnaDPI")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsegnaTesserino")
                        .HasColumnType("bit");

                    b.Property<bool?>("Employed")
                        .HasColumnType("bit");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HiringEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HiringStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("extraordinaryPrice")
                        .HasColumnType("float");

                    b.Property<string>("inStrenght")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicalIdoneity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ordinaryPrice")
                        .HasColumnType("float");

                    b.Property<string>("skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("travelPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.PersonaleResponsabileNota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNote")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNote");

                    b.HasIndex("IdPersonale");

                    b.ToTable("PersonaleResponsabileDiNota");
                });

            modelBuilder.Entity("CosiamAPI.Models.PrezziarioCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidationYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrezziarioCliente");
                });

            modelBuilder.Entity("CosiamAPI.Models.ReportDiCantiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<string>("JObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.ToTable("ReportDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.Saltura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<int>("IdCantiere")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroFattura")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCantiere");

                    b.ToTable("Saltura");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScadenzeMezzi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMezzi")
                        .HasColumnType("int");

                    b.Property<int>("IdNote")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PerformingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdMezzi");

                    b.HasIndex("IdNote");

                    b.ToTable("ScadenzeMezzi");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScadenzePersonale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNote")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonale")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PerformingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNote");

                    b.HasIndex("IdPersonale");

                    b.ToTable("ScadenzePersonale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScontoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPrezziarioCliente")
                        .HasColumnType("int");

                    b.Property<int>("Sconto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPrezziarioCliente");

                    b.ToTable("ScontoCliente");
                });

            modelBuilder.Entity("CosiamAPI.Models.ServizioCliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<int>("IdPrezziario")
                        .HasColumnType("int");

                    b.Property<double>("PricePerUm")
                        .HasColumnType("float");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IdPrezziario");

                    b.ToTable("ServizioCliente");
                });

            modelBuilder.Entity("CosiamAPI.Models.ServizioFornitore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<int>("IdFornitore")
                        .HasColumnType("int");

                    b.Property<double>("PricePerUM")
                        .HasColumnType("float");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFornitore");

                    b.ToTable("ServizioFornitore");
                });

            modelBuilder.Entity("CosiamAPI.Models.StrumentiDiMisura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CalibrationExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Idoneity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TecSpecs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrumentiDiMisura");
                });

            modelBuilder.Entity("CosiamAPI.Models.ThreadNota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdReferredNote")
                        .HasColumnType("int");

                    b.Property<int>("IdReferringNote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReferredNote");

                    b.HasIndex("IdReferringNote");

                    b.ToTable("ThreadNota");
                });

            modelBuilder.Entity("CosiamAPI.Models.TimeCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<int>("PersonaleId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReport");

                    b.HasIndex("PersonaleId");

                    b.ToTable("TimeCard");
                });

            modelBuilder.Entity("CosiamAPI.Models.VehicleCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("FuelCost")
                        .HasColumnType("float");

                    b.Property<int>("IdReport")
                        .HasColumnType("int");

                    b.Property<double>("LitersOfFuel")
                        .HasColumnType("float");

                    b.Property<int>("MezzoId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfHoursOfUsage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReport");

                    b.HasIndex("MezzoId");

                    b.ToTable("VehicleCard");
                });

            modelBuilder.Entity("CosiamAPI.Models._File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HashCode")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CosiamAPI.Models.AttachmentsNota", b =>
                {
                    b.HasOne("CosiamAPI.Models._File", "File")
                        .WithMany()
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Note", "Nota")
                        .WithMany()
                        .HasForeignKey("IdNota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("CosiamAPI.Models.AttachmentsSaltura", b =>
                {
                    b.HasOne("CosiamAPI.Models._File", "File")
                        .WithMany()
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Saltura", "Saltura")
                        .WithMany()
                        .HasForeignKey("IdSaltura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Saltura");
                });

            modelBuilder.Entity("CosiamAPI.Models.Cantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Contratto", "Contratto")
                        .WithMany()
                        .HasForeignKey("IdContratto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models._File", "File")
                        .WithMany()
                        .HasForeignKey("IdLogo");

                    b.Navigation("Contratto");

                    b.Navigation("File");
                });

            modelBuilder.Entity("CosiamAPI.Models.Contratto", b =>
                {
                    b.HasOne("CosiamAPI.Models.Clienti", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente");

                    b.HasOne("CosiamAPI.Models.PrezziarioCliente", "Prezziario")
                        .WithMany()
                        .HasForeignKey("IdPrezziarioCliente");

                    b.HasOne("CosiamAPI.Models.Personale", "Pm")
                        .WithMany()
                        .HasForeignKey("idPm");

                    b.Navigation("Cliente");

                    b.Navigation("Pm");

                    b.Navigation("Prezziario");
                });

            modelBuilder.Entity("CosiamAPI.Models.DocumentsList", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "canitereDiAppartenza")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models._File", "File")
                        .WithMany()
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.ReportDiCantiere", "reportDiCantiere")
                        .WithMany()
                        .HasForeignKey("IdReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("canitereDiAppartenza");

                    b.Navigation("File");

                    b.Navigation("reportDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListOfGoodsAndServicesInUse", b =>
                {
                    b.HasOne("CosiamAPI.Models.ReportDiCantiere", "ReportDiCantiere")
                        .WithMany()
                        .HasForeignKey("IdReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.ServizioFornitore", "ServizioFornitore")
                        .WithMany()
                        .HasForeignKey("ServizioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportDiCantiere");

                    b.Navigation("ServizioFornitore");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListOfServicesSoldToClient", b =>
                {
                    b.HasOne("CosiamAPI.Models.ReportDiCantiere", "ReportDiCantiere")
                        .WithMany()
                        .HasForeignKey("IdReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.ServizioCliente", "servizioCliente")
                        .WithMany()
                        .HasForeignKey("ServizioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportDiCantiere");

                    b.Navigation("servizioCliente");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaCapiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("IdPersonale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaFileDiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models._File", "File")
                        .WithMany()
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("File");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaFornitoriCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Fornitori", "Fornitore")
                        .WithMany()
                        .HasForeignKey("IdFornitore")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Fornitore");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaMezziDiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Mezzi", "Mezzo")
                        .WithMany()
                        .HasForeignKey("IdMezzi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Mezzo");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaNoteDiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Note", "Note")
                        .WithMany()
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaPersonaleAssegnatoDiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("IdPersonale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ListaProjectManagerCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("IdPersonale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.MezziNota", b =>
                {
                    b.HasOne("CosiamAPI.Models.Mezzi", "Mezzo")
                        .WithMany()
                        .HasForeignKey("IdMezzo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Note", "Note")
                        .WithMany()
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mezzo");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("CosiamAPI.Models.PersonaleResponsabileNota", b =>
                {
                    b.HasOne("CosiamAPI.Models.Note", "Note")
                        .WithMany()
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("IdPersonale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ReportDiCantiere", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.Saltura", b =>
                {
                    b.HasOne("CosiamAPI.Models.Cantiere", "Cantiere")
                        .WithMany()
                        .HasForeignKey("IdCantiere")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScadenzeMezzi", b =>
                {
                    b.HasOne("CosiamAPI.Models.Mezzi", "Mezzo")
                        .WithMany()
                        .HasForeignKey("IdMezzi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Note", "Nota")
                        .WithMany()
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mezzo");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScadenzePersonale", b =>
                {
                    b.HasOne("CosiamAPI.Models.Note", "Nota")
                        .WithMany()
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("IdPersonale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nota");

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("CosiamAPI.Models.ScontoCliente", b =>
                {
                    b.HasOne("CosiamAPI.Models.Clienti", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.PrezziarioCliente", "PrezziarioCliente")
                        .WithMany()
                        .HasForeignKey("IdPrezziarioCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PrezziarioCliente");
                });

            modelBuilder.Entity("CosiamAPI.Models.ServizioCliente", b =>
                {
                    b.HasOne("CosiamAPI.Models.PrezziarioCliente", "Prezziario")
                        .WithMany()
                        .HasForeignKey("IdPrezziario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prezziario");
                });

            modelBuilder.Entity("CosiamAPI.Models.ServizioFornitore", b =>
                {
                    b.HasOne("CosiamAPI.Models.Fornitori", "Fornitore")
                        .WithMany()
                        .HasForeignKey("IdFornitore")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornitore");
                });

            modelBuilder.Entity("CosiamAPI.Models.ThreadNota", b =>
                {
                    b.HasOne("CosiamAPI.Models.Note", "ReferredNote")
                        .WithMany()
                        .HasForeignKey("IdReferredNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Note", "ReferringNote")
                        .WithMany()
                        .HasForeignKey("IdReferringNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReferredNote");

                    b.Navigation("ReferringNote");
                });

            modelBuilder.Entity("CosiamAPI.Models.TimeCard", b =>
                {
                    b.HasOne("CosiamAPI.Models.ReportDiCantiere", "ReportDiCantiere")
                        .WithMany()
                        .HasForeignKey("IdReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Personale", "Personale")
                        .WithMany()
                        .HasForeignKey("PersonaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personale");

                    b.Navigation("ReportDiCantiere");
                });

            modelBuilder.Entity("CosiamAPI.Models.VehicleCard", b =>
                {
                    b.HasOne("CosiamAPI.Models.ReportDiCantiere", "ReportDiCantiere")
                        .WithMany()
                        .HasForeignKey("IdReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosiamAPI.Models.Mezzi", "Mezzo")
                        .WithMany()
                        .HasForeignKey("MezzoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mezzo");

                    b.Navigation("ReportDiCantiere");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
